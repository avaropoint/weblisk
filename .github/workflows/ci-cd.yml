# GitHub Actions CI Pipeline for Weblisk Framework
name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.4.5

      - name: Cache dependencies
        run: deno cache lib/weblisk.ts src/app.ts tests/*.ts

      - name: Run type checking
        run: deno check lib/weblisk.ts src/app.ts tests/*.ts

      - name: Run linting
        run: deno lint

      - name: Run formatting check
        run: deno fmt --check

      - name: Run tests
        run: deno test --allow-net --allow-read --allow-env tests/

      - name: Run integration tests
        run: |
          # Start server in background
          WEBLISK_ENV=test deno run --allow-net --allow-read --allow-env src/app.ts &
          SERVER_PID=$!

          # Wait for server to start
          sleep 5

          # Run basic smoke tests
          curl -f http://localhost:3000/health || exit 1
          curl -f http://localhost:3000/ || exit 1

          # Cleanup
          kill $SERVER_PID

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.4.5

      - name: Run security audit
        run: |
          # Check for known vulnerabilities in dependencies
          echo "=== Dependency Security Audit ==="
          deno info --json lib/weblisk.ts | grep -o '"specifier":[^,]*' | grep -o 'https://[^"]*' | sort -u > deps.txt
          echo "External dependencies found:"
          cat deps.txt
          
          # Basic security checks
          echo "=== Basic Security Checks ==="
          echo "Checking for common security issues..."
          
          # Check for potential secrets in code (basic patterns)
          if grep -r -i "password\|secret\|key\|token" lib/ src/ --include="*.ts" --exclude-dir=node_modules; then
            echo "⚠️  Potential secrets found in code - please review"
          else
            echo "✅ No obvious secrets found in source code"
          fi
          
          # Check for eval usage
          if grep -r "eval(" lib/ src/ --include="*.ts"; then
            echo "⚠️  eval() usage found - potential security risk"
          else
            echo "✅ No eval() usage found"
          fi
